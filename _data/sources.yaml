- title: Efficient Cross-platform Multiplexing of Hardware Performance Counters via Adaptive Grouping
  authors:
    - Tong-Yu Liu
    - Jianmei Guo
    - Bo Huang
  type: paper
  publisher: ACM Transactions on Architecture and Code Optimization
  description: Collecting sufficient microarchitecture performance data is essential for performance evaluation and workload characterization. There are many events to be monitored in a modern processor while only a few hardware performance monitoring counters (PMCs) can be used, so multiplexing is commonly adopted. However, inefficiency commonly exists in state-of-the-art profiling tools when grouping events for multiplexing PMCs. It has the risk of inaccurate measurement and misleading analysis. Commercial tools can leverage PMCs, but they are closed source and only support their specified platforms. To this end, we propose an approach for efficient cross-platform microarchitecture performance measurement via adaptive grouping, aiming to improve the metricsâ€™ sampling ratios. The approach generates event groups based on the number of available PMCs detected on arbitrary machines while avoiding the scheduling pitfall of Linux perf_event subsystem. We evaluate our approach with SPEC CPU 2017 on four mainstream x86-64 and AArch64 processors and conduct comparative analyses of efficiency with two other state-of-the-art tools, LIKWID and ARM Top-down Tool. The experimental results indicate that our approach gains around 50% improvement in the average sampling ratio of metrics without compromising the correctness and reliability.
  date: 2024-1-19
  image: images/publications/AdaptiveGrouping.jpg
  buttons:
    - type: website
      link: https://dl.acm.org/doi/10.1145/3629525
    - type: source
      link: https://github.com/GraysonLiu23/hperf
  tags:
    - performance monitoring unit
    - hardware performance counter
    - performance measurement
  link: https://dl.acm.org/doi/10.1145/3629525

- title: "TCSA: Efficient Localization of Busy-Wait Synchronization Bugs for Latency-Critical Applications"
  authors:
    - Ning Li
    - Jianmei Guo
    - Bo Huang 
    - Yuyang Li
    - Yilei Zhang
    - Chengdong Li
    - Wenxin Huang
  type: paper
  publisher: IEEE Transactions on Parallel and Distributed Systems
  description: Busy-wait synchronization is often used for latency-critical applications to ensure low latency. Unfortunately, its performance bugs due to thread contention may lead to request failures or even system crashes. Localizing the performance bugs of busy-wait synchronization is not trivial because we have to pinpoint the exact moment of occurrence from a relatively long measurement period and simultaneously identify candidate busy-wait threads from numerous concurrent threads. Existing methods often rely on hotspot-driven analysis of lock-related functions, but they still need extensive manual work to localize busy-wait threads. This paper proposes timing call stack analysis (TCSA), an efficient approach to localizing busy-wait synchronization bugs. The key idea is to time-serialize the function call stacks of applications and identify consecutive identical call stacks to catch busy-wait threads. TCSA can handle any application regardless of its programming language and identify various busy-wait patterns, including spinlocks, chaining spinlocks, futexes, and safepoint checks within the Java Virtual Machine. Compared to the state-of-the-art, TCSA can effectively diminish the quantity of examined records (e.g., threads and functions) by 1 to 3 orders of magnitude. TCSA has been deployed to a large cloud service provider, demonstrating its effectiveness, efficiency, and practicality in four real latency-critical applications.
  date: 2023-12-13
  image: images/publications/TCSA.jpg
  buttons:
    - type: website
      link: https://ieeexplore.ieee.org/document/10356837
    - type: source
      link: https://jihulab.com/solecnu/tcsa
  tags:
    - busy-wait synchronization
    - latency-critical applications
    - performance bug localization
    - timing call stack analysis
  link: https://ieeexplore.ieee.org/document/10356837

- title: "Hmem: A Holistic Memory Performance Metric for Cloud Computing"
  authors:
    - Yuyang Li
    - Ning Li
    - Yilei Zhang
    - Jianmei Guo
    - Bo Huang
    - Mengbang Xing
    - Wenxin Huang
  type: paper
  publisher: International Symposium on Benchmarking, Measuring and Optimization
  description: With the proliferation of cloud computing, cloud service providers offer users a variety of choices in terms of pricing and computing performance. A critical factor impacting computing performance is main memory, often evaluated using bandwidth and access latency metrics. For two evaluations with the same workload while under different system configurations, it is hard to determine which system delivers better memory performance for the particular workload if neither evaluation data achieves higher bandwidth and lower latency simultaneously. This dilemma is further exacerbated under different memory access patterns. We recognize that state-of-the-art memory performance metrics cannot well address the dilemma. To address this challenge, we define a holistic memory performance metric, named *Hmem*, which is calculated from a fusion of bandwidth and latency metrics across different access patterns. To reflect the overall performance of a given workload, we calculate the correlation between our proposed metric and the workload's throughput. Experimental results show that Hmem exhibits an average improvement of 70% on correlation coefficients compared to state-of-the-art memory performance metrics. A large cloud service provider has adopted Hmem to improve the efficiency of their memory performance evaluation and cloud server selection.
  date: 2024-2-14
  image: images/publications/Hmem.jpg
  buttons:
    - type: website
      link: https://link.springer.com/chapter/10.1007/978-981-97-0316-6_11
    - type: source
      link: https://jihulab.com/solecnu/hmem
  tags:
    - comprehensive evaluation
    - cloud computing
    - performance evaluation
  link: https://link.springer.com/chapter/10.1007/978-981-97-0316-6_11

- title: "A Hotspot-Driven Semi-automated Competitive Analysis Framework for Identifying Compiler Key Optimizations"
  authors:
    - Wenlong Mu
    - Yilei Zhang
    - Bo Huang
    - Jianmei Guo
    - Shiqiang Cui
  type: paper
  publisher: Proceedings of the 32nd ACM SIGPLAN International Conference on Compiler Construction
  description: High-performance compilers play an important role in improving the run-time performance of a program, and it is hard and time-consuming to identify the key optimizations implemented in a high-performance compiler with traditional program analysis. In this paper, we propose a hotspot-driven semi-automated competitive analysis framework for identifying key optimizations through comparing the hotspot codes generated by any two different compilers. Our framework is platform-agnostic and works well on both AArch64 and X64 platforms, which automates the stages of hotspot detection and dynamic binary instrumentation only for selected hotspots. With the instrumented instruction characterization information, the framework users can analyze the binary code within a much smaller scope to explore practical optimizations implemented in any of the compilers compared. To demonstrate the effectiveness and practicality, we conduct experiments on SPECspeed 2017 Integer benchmarks(CINT2017) and their binaries generated by open-source GCC compiler versus proprietary Huawei BiSheng and Intel ICC compilers on AArch64 and X64 platforms respectively. Empirical studies show that our methods can identify several significant optimizations that have been implemented by proprietary compilers and as well can be implemented in open-source compilers. To Hangzhou Hongjun Microelectronics Technology(Hjmicro), the identified key optimizations shed great light on optimizing their GCC-based product compiler, which delivers 20.83% improvement for SPECrate 2017 Integer on AArch64 platform.
  date: 2023-2-17
  image: images/publications/Hotspot.jpg
  buttons:
    - type: website
      link: https://dl.acm.org/doi/abs/10.1145/3578360.3580255
    - type: source
      link: https://github.com/solecnugit/hotspotdrivenframework
  tags:
    - compiler optimization
    - dynamic binary instrumentation
    - hotspots detection
    - binary analysis
  link: https://dl.acm.org/doi/abs/10.1145/3578360.3580255
